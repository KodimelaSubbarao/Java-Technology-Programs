/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.19
 * Generated at: 2024-06-13 17:07:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE HTML>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<title>Voidmain</title>\r\n");
      out.write("<meta name=\"description\" content=\"website description\" />\r\n");
      out.write("<meta name=\"keywords\" content=\"website keywords, website keywords\" />\r\n");
      out.write("<meta http-equiv=\"content-type\"\r\n");
      out.write("	content=\"text/html; charset=windows-1252\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"style/style.css\"\r\n");
      out.write("	title=\"style\" />\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	<div id=\"main\">\r\n");
      out.write("		<div id=\"header\">\r\n");
      out.write("			<div id=\"logo\">\r\n");
      out.write("				<div id=\"logo_text\">\r\n");
      out.write("					<!-- class=\"logo_colour\", allows you to change the colour of the text -->\r\n");
      out.write("					<h1>\r\n");
      out.write("						<a href=\"#\">Agriculture <span class=\"logo_colour\">Waste Management</span></a>\r\n");
      out.write("					</h1>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div id=\"menubar\">\r\n");
      out.write("				<ul id=\"menu\">\r\n");
      out.write("				\r\n");
      out.write("					<li><a href=\"login.jsp\">Login</a></li>\r\n");
      out.write("					<li><a href=\"registration.jsp\">Registration</a></li>\r\n");
      out.write("\r\n");
      out.write("				</ul>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div id=\"content_header\"></div>\r\n");
      out.write("		<div id=\"site_content\">\r\n");
      out.write("			<div id=\"content\">\r\n");
      out.write("				<!-- insert the page content here -->\r\n");
      out.write("				");

					String status=request.getParameter("status");
									
					if(status!=null)
					{
				
      out.write("\r\n");
      out.write("						<h1>");
      out.print(status);
      out.write("</h1>\r\n");
      out.write("				");
		
					}
					else
					{
				
      out.write("\r\n");
      out.write("						<h1>Login Here</h1>\r\n");
      out.write("				");
		
					}
				
      out.write("\r\n");
      out.write("				\r\n");
      out.write("				<form action=\"LoginServlet\">\r\n");
      out.write("					<div class=\"form_settings\">\r\n");
      out.write("						\r\n");
      out.write("						<p>\r\n");
      out.write("							<span>User Name :</span><input class=\"contact\" type=\"text\"\r\n");
      out.write("								name=\"username\" value=\"\" />\r\n");
      out.write("						</p>\r\n");
      out.write("						<p>\r\n");
      out.write("							<span>Password :</span><input class=\"contact\" type=\"password\"\r\n");
      out.write("								name=\"password\" value=\"\" />\r\n");
      out.write("						</p>\r\n");
      out.write("						<p style=\"padding-top: 15px\">\r\n");
      out.write("							<span>&nbsp;</span><input class=\"submit\" type=\"submit\"\r\n");
      out.write("								name=\"contact_submitted\" value=\"Login\" /><a href=\"forgotpassword.jsp\">forgot password?</a>\r\n");
      out.write("						</p>\r\n");
      out.write("					</div>\r\n");
      out.write("				</form>\r\n");
      out.write("				\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
