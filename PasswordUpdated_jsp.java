/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.19
 * Generated at: 2024-03-19 12:34:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class PasswordUpdated_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/UserLogin.html", Long.valueOf(1710767936539L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Password Updated</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");

		String msg=(String)request.getAttribute("msg");
		out.println("<br><b>&nbsp;&nbsp;&nbsp;<span style='color:green;' >"+msg+"</span></b>");
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>User Login</title>\r\n");
      out.write("    <style type=\"text/css\">\r\n");
      out.write("        .sec{\r\n");
      out.write("            border: 10px double lightslategrey;\r\n");
      out.write("            margin-top: 100px;\r\n");
      out.write("            margin-left: 300px;\r\n");
      out.write("            margin-right: 300px;\r\n");
      out.write("            height: 330px;\r\n");
      out.write("            padding-top:50px ;\r\n");
      out.write("            padding-left: 170px;\r\n");
      out.write("            background-color: lightpink;\r\n");
      out.write("            width: 500px;\r\n");
      out.write("        }\r\n");
      out.write("        h2{\r\n");
      out.write("            padding-left: 35px;\r\n");
      out.write("            font-size: 25px;\r\n");
      out.write("            font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n");
      out.write("            text-decoration: underline ;\r\n");
      out.write("            \r\n");
      out.write("        }\r\n");
      out.write("        dt{\r\n");
      out.write("            font-size: 20px;\r\n");
      out.write("            font-weight: bolder;\r\n");
      out.write("            padding-bottom: 5px;\r\n");
      out.write("            padding-top: 15px;\r\n");
      out.write("        }\r\n");
      out.write("        input{\r\n");
      out.write("            width: 180px;\r\n");
      out.write("            height: 20px;\r\n");
      out.write("            padding-left: 10px;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            border-style: solid; \r\n");
      out.write("        }\r\n");
      out.write("        .btn{\r\n");
      out.write("            display: grid;\r\n");
      out.write("            grid-row: span;\r\n");
      out.write("        }\r\n");
      out.write("        .btn button{\r\n");
      out.write("            width: 100px;\r\n");
      out.write("            margin-left: 85px;\r\n");
      out.write("            background-color: red;\r\n");
      out.write("            color: white;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            height: 28px;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("        }\r\n");
      out.write("        .links{\r\n");
      out.write("            margin-top: 15px;\r\n");
      out.write("        }\r\n");
      out.write("        .links a{\r\n");
      out.write("            padding-left: 40px;\r\n");
      out.write("            padding-top: 15px;\r\n");
      out.write("            font-size: 17px;\r\n");
      out.write("        }\r\n");
      out.write("        .star{\r\n");
      out.write("            color: red;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            font-size: 21px;\r\n");
      out.write("            padding-left: 3px;\r\n");
      out.write("            padding-top: -5px;\r\n");
      out.write("        }\r\n");
      out.write("        button:hover{\r\n");
      out.write("            cursor: -webkit-grab;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("        function btnhover()\r\n");
      out.write("        {\r\n");
      out.write("            var uname=document.getElementById(\"un\").value;\r\n");
      out.write("            var pword=document.getElementById(\"pw\").value;\r\n");
      out.write("            var btn=document.getElementById(\"btn\");\r\n");
      out.write("            if(uname!=\"\" && pword!=\"\")\r\n");
      out.write("            {\r\n");
      out.write("                btn.style.backgroundColor=\"green\";\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        function btnout(){\r\n");
      out.write("            var uname=document.getElementById(\"un\").value;\r\n");
      out.write("            var pword=document.getElementById(\"pw\").value;\r\n");
      out.write("            var btn=document.getElementById(\"btn\");\r\n");
      out.write("            if(uname==\"\" || pword==\"\")\r\n");
      out.write("            {\r\n");
      out.write("                btn.style.backgroundColor=\"red\";\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <section class=\"sec\">\r\n");
      out.write("        <div>\r\n");
      out.write("            <h2>User Login Form</h2>\r\n");
      out.write("            <form action=\"ulogin\" method=\"post\">\r\n");
      out.write("                <dl>\r\n");
      out.write("                    <dt>User Name</dt>\r\n");
      out.write("                    <dd><input type=\"text\" id=\"un\" onblur=\"btnout()\" onkeyup=\"btnhover()\" name=\"uname\"  placeholder=\"Enter User Name..\" required><span class=\"star\">*</span></dd>\r\n");
      out.write("                    <dt>Password</dt>\r\n");
      out.write("                    <dd><input type=\"password\" id=\"pw\" onblur=\"btnout()\" onkeyup=\"btnhover()\" name=\"pword\" placeholder=\"Enter Password...\" required ><span class=\"star\">*</span></dd>\r\n");
      out.write("                </dl>\r\n");
      out.write("                <div class=\"btn\">\r\n");
      out.write("                    <button type=\"submit\" id=\"btn\" >Login</button>\r\n");
      out.write("                    <span class=\"links\">\r\n");
      out.write("                        <a href=\"NewUserRegister.html\" style=\"text-decoration: none;  a:hover{ text-decoration: underline;}\">New Registration?</a>\r\n");
      out.write("                        <a href=\"UserForgot.html\" style=\"text-decoration: none;  a:hover{ text-decoration: underline;}\">Forgot Password?</a>\r\n");
      out.write("                    </span>\r\n");
      out.write("                </div>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    </section>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
