/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.19
 * Generated at: 2024-03-06 14:48:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.*;
import emp.EmployeeBean;

public final class ViewAllEmp_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/index.html", Long.valueOf(1709736482114L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(1);
    _jspx_imports_classes.add("emp.EmployeeBean");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>View Emp Details</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");

		ArrayList<EmployeeBean> al=(ArrayList<EmployeeBean>)request.getAttribute("arraylist");
		if(al.size()==0)
		{
			out.println("<b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Employee Detilas Not Available</b>");
		}
		else{
			Iterator<EmployeeBean> i=al.iterator();
			while(i.hasNext())
			{
				EmployeeBean eb=(EmployeeBean)i.next();
				out.println("<br><b>"+eb.getEid()+"&nbsp;&nbsp;&nbsp;"+eb.getEname()+"&nbsp;&nbsp;&nbsp;"+eb.getEjob()+"&nbsp;&nbsp;&nbsp;"+
						eb.getEsal()+"&nbsp;&nbsp;&nbsp;"+eb.getEda()+"&nbsp;&nbsp;&nbsp;"+eb.getEda()+"&nbsp;&nbsp;&nbsp;"+eb.getEtotsal()+"</b><br><br>");
			}
		}
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Employee Details</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("	body{\r\n");
      out.write("		font-weight: bold;\r\n");
      out.write("		\r\n");
      out.write("	}\r\n");
      out.write("	.sa span a{\r\n");
      out.write("		text-decoration: none;\r\n");
      out.write("		font-size: 30px;\r\n");
      out.write("		font-family: sans-serif;\r\n");
      out.write("		border:5px solid fuchsia;	\r\n");
      out.write("		border-radius: 30px;\r\n");
      out.write("		background-color: yellow;\r\n");
      out.write("	}\r\n");
      out.write("	.sa1{\r\n");
      out.write("		\r\n");
      out.write("		border:4px solid black;\r\n");
      out.write("		border-radius: 10px;\r\n");
      out.write("		padding-top: 20px;\r\n");
      out.write("		width: 500px;\r\n");
      out.write("		margin-left: 90px;\r\n");
      out.write("		margin-top: 25px;\r\n");
      out.write("		background-color: rgb(100,122,177);\r\n");
      out.write("		height: 200px;\r\n");
      out.write("	}\r\n");
      out.write("	.sa{\r\n");
      out.write("		padding-top:50px;\r\n");
      out.write("		border-radius: 26px;\r\n");
      out.write("		background-color: rgba(220,152,191);\r\n");
      out.write("		height: 300px;\r\n");
      out.write("		width: 700px;\r\n");
      out.write("		margin-left: 360px;\r\n");
      out.write("		padding: 20px;\r\n");
      out.write("	}\r\n");
      out.write("	h1{\r\n");
      out.write("		text-decoration: underline;\r\n");
      out.write("		font-size: 45px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body align=\"center\" topmargin=\"100px\" alink=\"green\" vlink=\"red\">\r\n");
      out.write("		<h1>Employee Details</h1>\r\n");
      out.write("	<div class=\"sa\">\r\n");
      out.write("		<div class=\"sa1\">\r\n");
      out.write("			<span>\r\n");
      out.write("			<a href=\"AddEmployee.html\">Add Employee</a><br><br>\r\n");
      out.write("			<a href=\"view\">View All Details</a><br><br>\r\n");
      out.write("			<a href=\"ViewEmployeeByCode.html\">View Employee Details By Code</a>\r\n");
      out.write("		</span>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
